[{"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/index.js":"1","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/App.js":"2","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/Context/AuthContext.js":"3","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/HomePage/index.jsx":"4","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/LoginPage/index.jsx":"5","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/SignupPage/index.jsx":"6","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/PoolConnection/index.js":"7","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/GpuData/index.js":"8","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/sshData/index.js":"9","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/SystemSpecs/index.jsx":"10","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/utils/scripts.js":"11","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/GpuNode/index.jsx":"12","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/services/dockerCreation.js":"13","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/LoginPage2/index.jsx":"14","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/TopBar/index.jsx":"15","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/Card/index.jsx":"16","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/utils/config.js":"17"},{"size":306,"mtime":1691583943587,"results":"18","hashOfConfig":"19"},{"size":653,"mtime":1691588856400,"results":"20","hashOfConfig":"19"},{"size":1113,"mtime":1692787662118,"results":"21","hashOfConfig":"19"},{"size":2720,"mtime":1692154492431,"results":"22","hashOfConfig":"19"},{"size":7751,"mtime":1692854885690,"results":"23","hashOfConfig":"19"},{"size":4661,"mtime":1691582911246,"results":"24","hashOfConfig":"19"},{"size":598,"mtime":1691576510432,"results":"25","hashOfConfig":"19"},{"size":13163,"mtime":1692872802711,"results":"26","hashOfConfig":"19"},{"size":2926,"mtime":1692873316177,"results":"27","hashOfConfig":"19"},{"size":1551,"mtime":1692862519711,"results":"28","hashOfConfig":"19"},{"size":2568,"mtime":1692853581321,"results":"29","hashOfConfig":"19"},{"size":14652,"mtime":1692863678730,"results":"30","hashOfConfig":"19"},{"size":2537,"mtime":1692182896272,"results":"31","hashOfConfig":"19"},{"size":3651,"mtime":1691591277654,"results":"32","hashOfConfig":"19"},{"size":1645,"mtime":1691648372125,"results":"33","hashOfConfig":"19"},{"size":145,"mtime":1691666529448,"results":"34","hashOfConfig":"19"},{"size":101,"mtime":1692853581321,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1hdgfwb",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/index.js",[],["76","77"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/App.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/Context/AuthContext.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/HomePage/index.jsx",["78","79"],"import React, { useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport SystemSpecs from '../../components/SystemSpecs'\nimport { AuthContext } from '../../Context/AuthContext'\nimport { removeGpuData,updateGpuStatus } from '../../database/GpuData'\nimport { removeSshCredientials } from '../../database/sshData'\nimport TopBar from '../../components/TopBar'\nimport { SecondaryButton } from 'qlu-20-ui-library'\nimport './style.scss'\nconst ngrok = window.require('ngrok')\n\nconst HomePage = () => {\n  const navigate = useNavigate()\n  const { logout } = useContext(AuthContext)\n\n  // const handleWithdraw = async () => {\n  //   try {\n  //     await removeSshCredientials()\n  //     await removeGpuData()\n  //     await stopAndDeleteContainer(IMAGE_NAME)\n  //     await ngrok.disconnect()\n  //     setIsLend(false)\n  //   } catch (err) {\n  //     setErrorMessage(\n  //       'Withdrawal failed. Please try again. Error: ' + err.message\n  //     )\n  //     setTimeout(() => setErrorMessage(err), 5000) // Clear error message after 5 seconds\n  //     console.log(err)\n  //   }\n  // }\n\n  const handleLogout = async () => {\n    \n    // removeSshCredientials()\n    // removeGpuData()\n        const user_id = JSON.parse(localStorage.getItem('userData')).id\n        console.log(\"User_idddddddd\",user_id);\n        await updateGpuStatus(user_id, 'disconnected'); // Update gpu_status to 'active'\n      \n        logout()\n    ngrok.disconnect()\n    navigate('/')\n  }\n\n  return (\n    <>\n      <TopBar />\n      <div className=\"main-content\">\n      <div className=\"gpu-bar\">\n        <div className=\"active-gpus\">\n          <div className=\"text\">\n          Active Gpu's\n          </div>\n          \n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"87\"\n            height=\"2\"\n            viewBox=\"0 0 87 2\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M1 1H86\"\n              stroke=\"#FF8D4E\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n            />\n          </svg>\n        </div>\n        <div className=\"total-gpus\">\n          <div className=\"text\">Total Gpus</div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"87\"\n            height=\"2\"\n            viewBox=\"0 0 87 2\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M1 1H86\"\n              stroke=\"#FF8D4E\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n            />\n          </svg>\n        </div>\n        \n      </div>\n      <SystemSpecs />\n      </div>\n    <div className=\"logout-button\">\n    <SecondaryButton text='Logout' onClick={handleLogout}/>\n    </div>\n \n    </>\n  )\n}\n\nexport default HomePage\n","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/LoginPage/index.jsx",["80","81","82"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/SignupPage/index.jsx",["83"],"import React, { useState } from 'react'\nimport { pool } from '../../database/PoolConnection'\nimport { Modal, Button } from 'react-bootstrap'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './style.css' // Import custom CSS file for Signup component styling\nimport * as Yup from 'yup'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(8, 'email must be at least 8 characters long')\n    .required('email is required'),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters long')\n    .matches(/[a-z]/, 'Password must contain at least one lowercase char')\n    .matches(/[A-Z]/, 'Password must contain at least one uppercase char')\n    .matches(/[0-9]+/, 'Password must contains at least one number.')\n    .matches(\n      /[!@#$%^&*(),.?\":{}|<>]/,\n      'Password must contain at least one specialdispatch(increment()) char'\n    )\n    .required('Password is required')\n})\n\nconst SignupPage = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [showModal, setShowModal] = useState(false) // State to control the modal visibility\n  const [errors, setErrors] = useState({ email: '', password: '' })\n\n  const handleInputChange = e => {\n    const { name, value } = e.target\n    setErrors(prevErrors => ({ ...prevErrors, [name]: '' }))\n    if (name === 'email') {\n      setEmail(value)\n    } else if (name === 'password') {\n      setPassword(value)\n    }\n  }\n\n  const handleSignup = async () => {\n    try {\n      const isValid = await validationSchema.isValid({ email, password })\n      if (!isValid) {\n        try {\n          await validationSchema.validate(\n            { email, password },\n            { abortEarly: false }\n          )\n        } catch (validationErrors) {\n          const validationErrorsMap = validationErrors.inner.reduce(\n            (acc, error) => {\n              acc[error.path] = error.message\n              return acc\n            },\n            {}\n          )\n          setErrors(prevErrors => ({ ...prevErrors, ...validationErrorsMap }))\n\n          Object.values(validationErrorsMap).forEach(errorMsg => {\n            toast.error(errorMsg)\n          })\n        }\n        return\n      } else {\n        const client = await pool.connect()\n        const bcrypt = window.require('bcrypt')\n        const saltRounds = 10\n        const hashedPassword = await bcrypt.hash(password, saltRounds)\n        const query =\n          'INSERT INTO client_user (email, password) VALUES ($1, $2)'\n        await client.query(query, [email, hashedPassword])\n        console.log('User registered')\n        client.release()\n        setShowModal(true) // Show the success modal\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleCloseModal = () => {\n    setShowModal(false) // Close the modal\n  }\n\n  return (\n    <div className=\"signup-container\">\n      <ToastContainer /> \n      <form className=\"signup-form\">\n        <h2 className=\"signup-heading\">Signup</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\" className=\"signup-label\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            className=\"signup-input\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\" className=\"signup-label\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            className=\"signup-input\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Enter your password\"\n            value={password}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"button\" className=\"signup-button\" onClick={handleSignup}>\n          Signup\n        </button>\n        <a href=\"/\" className=\"login-link\">\n          Already have an account? Login\n        </a>\n\n        {/* Success Modal */}\n        <Modal show={showModal} onHide={handleCloseModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Success</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            User registration successful. You can now log in with your\n            credentials.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseModal}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </form>\n    </div>\n  )\n}\n\nexport default SignupPage\n","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/PoolConnection/index.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/GpuData/index.js",["84","85","86","87"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/sshData/index.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/SystemSpecs/index.jsx",["88"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/utils/scripts.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/GpuNode/index.jsx",["89","90","91"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/services/dockerCreation.js",["92","93","94","95"],"const Docker = window.require('dockerode')\nconst { exec } = window.require('child_process')\n\nconst docker = new Docker()\n\nconst execShellCommand = cmd => {\n  return new Promise((resolve, reject) => {\n    exec(cmd, (error, stdout, stderr) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(stdout || stderr)\n      }\n    })\n  })\n}\n\nexport async function createAndStartDocker(imageName, container_image_name) {\n  const PORT = 2222\n\n  console.log('Creating Docker image...')\n  try {\n    await execShellCommand(\n      `docker build --rm -t ${imageName} -f /home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/server/Dockerfile .`\n    )\n  } catch (error) {\n    console.error('Error Creating Docker image:', error)\n    throw 'Error Creating Docker image'\n  }\n\n  console.log('Running Docker container...')\n  try {\n    execShellCommand(\n      `docker run -d -p 2222:22 --name ${imageName} ${imageName}`\n      // `docker run -p ${PORT}:22 --name ${container_image_name} ${imageName}:latest`\n    )\n  } catch (error) {\n    console.error('Error running Docker container:', error)\n    throw 'Error running Docker container'\n  }\n}\n\n\nexport async function stopAndDeleteContainer(imageName) {\n  // Stop the container\n  const stopCommand = `docker stop ${imageName}`;\n  exec(stopCommand, (stopError, stopStdout, stopStderr) => {\n    if (stopError) {\n      console.error(`Error stopping the container: ${imageName}`);\n      console.error(stopStderr);\n    } else {\n      console.log(`Container ${imageName} stopped successfully.`);\n\n      // Delete the container\n      const deleteContainerCommand = `docker rm ${imageName}`;\n      exec(deleteContainerCommand, (deleteContainerError, deleteContainerStdout, deleteContainerStderr) => {\n        if (deleteContainerError) {\n          console.error(`Error deleting the container: ${imageName}`);\n          console.error(deleteContainerStderr);\n        } else {\n          console.log(`Container ${imageName} deleted successfully.`);\n\n          // Now that the container is deleted, you can delete the image\n          const deleteImageCommand = `docker rmi ${imageName}`;\n          exec(deleteImageCommand, (deleteImageError, deleteImageStdout, deleteImageStderr) => {\n            if (deleteImageError) {\n              console.error(`Error deleting the image: ${imageName}`);\n              console.error(deleteImageStderr);\n            } else {\n              console.log(`Image ${imageName} deleted successfully.`);\n            }\n          });\n        }\n      });\n    }\n  });\n}\n\n\n\n\n\n\n","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/LoginPage2/index.jsx",["96","97","98","99"],"import { useState } from 'react'\nimport './style.scss'\nimport {\n  AuthNavBar,\n  ClickableText,\n  InputField,\n  PrimaryButton\n} from 'qlu-20-ui-library'\n\n//import HomePage from \"../HomePage/index.jsx\";\nimport { useNavigate, Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n//import { setUserData } from \"../../reducers/userSlice\";\n//import { isEmailValid } from \"../../../utils\";\n\nfunction Login() {\n  //const SERVER_URL = import.meta.env.VITE_APP_SERVER_URL;\n  const [email, setEmail] = useState('')\n  const dispatch = useDispatch()\n  const [password, setPassword] = useState('')\n  const [emailError, setEmailError] = useState('')\n  const [passwordError, setPasswordError] = useState('')\n  const navigate = useNavigate()\n\n  const loginHandler = async () => {\n    setEmailError('')\n    setPasswordError('')\n\n    if (!email && !password) {\n      setEmailError('Email is required')\n\n      setPasswordError('Password is required')\n      return\n    }\n    if (!email) {\n      setEmailError('Email is required')\n      return\n    }\n\n    // if (!isEmailValid(email)) {\n    //   setEmailError(\"Invalid email format\");\n    //   return;\n    // }\n\n    if (!password) {\n      setPasswordError('Password is required')\n      return\n    }\n\n    const data = {\n      email,\n      password\n    }\n    // dispatch(logIn(data));\n\n    try {\n      const response = await fetch('auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      }).then(response => response.json())\n      console.log(response)\n      if (response.success === true) {\n        console.log('Resonse-user', response.user)\n        // dispatch(setUserData(response.user));\n        localStorage.setItem('xhqr', JSON.stringify(response.user?.xhqr))\n        navigate('/')\n\n        //  setVerificationStatus(true);\n      } else {\n        navigate('/UnverifiedPage')\n      }\n    } catch (error) {\n      console.error('Error verifying link:', error)\n    }\n  }\n\n  return (\n    <div className=\"login_page\">\n      <div className=\"auth_nav_bar\">\n        <AuthNavBar\n          text=\"Don't have an account\"\n          textColor=\"gray\"\n          buttonText=\"Sign up\"\n          buttonColorVaraint=\"primaryOrangeBorderAndText\"\n          buttonOnClick={() => {\n            navigate('/signup')\n          }}\n          textOnClick={() => {}}\n        />\n      </div>\n\n      <div className=\"login_container\">\n        <h3>Welcome Back!</h3>\n        <div className=\"login_details\">\n          <div className=\"email\">\n            <label className=\"email\">Work Email</label>\n            <InputField\n              id=\"email\"\n              value={email}\n              onChangeHandler={e => setEmail(e.target.value)}\n              required\n            />\n            {emailError && <p className=\"error-message\">{emailError}</p>}\n          </div>\n          <div className=\"pass\">\n            <label htmlFor=\"\" className=\"password\">\n              PASSWORD\n            </label>\n            <InputField\n              type=\"password\"\n              value={password}\n              onChangeHandler={e => setPassword(e.target.value)}\n              required\n            />\n            {passwordError && <p className=\"error-message\">{passwordError}</p>}\n          </div>\n          <Link to=\"/forgot-password\">Forgot Password</Link>\n        </div>\n        <div className=\"button\">\n          <button\n            type=\"submit\"\n            className=\"primaryButton\"\n            onClick={loginHandler}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n",["100","101"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/TopBar/index.jsx",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/Card/index.jsx",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/utils/config.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":23},{"ruleId":"106","severity":1,"message":"110","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":31},{"ruleId":"106","severity":1,"message":"111","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":24},{"ruleId":"106","severity":1,"message":"112","line":36,"column":9,"nodeType":"108","messageId":"109","endLine":36,"endColumn":26},{"ruleId":"106","severity":1,"message":"113","line":46,"column":9,"nodeType":"108","messageId":"109","endLine":46,"endColumn":20},{"ruleId":"106","severity":1,"message":"114","line":29,"column":10,"nodeType":"108","messageId":"109","endLine":29,"endColumn":16},{"ruleId":"106","severity":1,"message":"115","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":22,"column":7,"nodeType":"118","messageId":"119","endLine":22,"endColumn":86},{"ruleId":"106","severity":1,"message":"120","line":68,"column":17,"nodeType":"108","messageId":"109","endLine":68,"endColumn":33},{"ruleId":"106","severity":1,"message":"121","line":190,"column":11,"nodeType":"108","messageId":"109","endLine":190,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":36,"column":4,"nodeType":"124","endLine":36,"endColumn":6,"suggestions":"125"},{"ruleId":"106","severity":1,"message":"126","line":1,"column":20,"nodeType":"108","messageId":"109","endLine":1,"endColumn":29},{"ruleId":"106","severity":1,"message":"107","line":4,"column":22,"nodeType":"108","messageId":"109","endLine":4,"endColumn":35},{"ruleId":"106","severity":1,"message":"110","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":31},{"ruleId":"106","severity":1,"message":"127","line":4,"column":7,"nodeType":"108","messageId":"109","endLine":4,"endColumn":13},{"ruleId":"106","severity":1,"message":"128","line":19,"column":9,"nodeType":"108","messageId":"109","endLine":19,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":28,"column":5,"nodeType":"118","messageId":"119","endLine":28,"endColumn":40},{"ruleId":"116","severity":1,"message":"117","line":39,"column":5,"nodeType":"118","messageId":"119","endLine":39,"endColumn":43},{"ruleId":"106","severity":1,"message":"129","line":5,"column":3,"nodeType":"108","messageId":"109","endLine":5,"endColumn":16},{"ruleId":"106","severity":1,"message":"130","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":16},{"ruleId":"106","severity":1,"message":"131","line":19,"column":9,"nodeType":"108","messageId":"109","endLine":19,"endColumn":17},{"ruleId":"106","severity":1,"message":"121","line":50,"column":11,"nodeType":"108","messageId":"109","endLine":50,"endColumn":15},{"ruleId":"102","replacedBy":"132"},{"ruleId":"104","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'removeGpuData' is defined but never used.","Identifier","unusedVar","'removeSshCredientials' is defined but never used.","'ToastContainer' is defined but never used.","'handleInputChange' is assigned a value but never used.","'handleLogin' is assigned a value but never used.","'errors' is assigned a value but never used.","'pool' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'validInsertedIds' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'systemSpecs'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'useEffect' is defined but never used.","'docker' is assigned a value but never used.","'PORT' is assigned a value but never used.","'ClickableText' is defined but never used.","'PrimaryButton' is defined but never used.","'dispatch' is assigned a value but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [systemSpecs]",{"range":"139","text":"140"},[1256,1258],"[systemSpecs]"]