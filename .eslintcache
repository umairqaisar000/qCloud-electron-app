[{"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/index.js":"1","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/App.js":"2","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/Context/AuthContext.js":"3","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/HomePage/index.jsx":"4","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/LoginPage/index.jsx":"5","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/SignupPage/index.jsx":"6","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/PoolConnection/index.js":"7","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/GpuData/index.js":"8","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/sshData/index.js":"9","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/SystemSpecs/index.jsx":"10","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/utils/scripts.js":"11","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/GpuNode/index.jsx":"12","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/services/dockerCreation.js":"13","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/LoginPage2/index.jsx":"14","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/TopBar/index.jsx":"15","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/Card/index.jsx":"16"},{"size":306,"mtime":1691583943587,"results":"17","hashOfConfig":"18"},{"size":653,"mtime":1691588856400,"results":"19","hashOfConfig":"18"},{"size":1113,"mtime":1692787662118,"results":"20","hashOfConfig":"18"},{"size":2720,"mtime":1692154492431,"results":"21","hashOfConfig":"18"},{"size":6798,"mtime":1692787992893,"results":"22","hashOfConfig":"18"},{"size":4661,"mtime":1691582911246,"results":"23","hashOfConfig":"18"},{"size":598,"mtime":1691576510432,"results":"24","hashOfConfig":"18"},{"size":4228,"mtime":1692787479640,"results":"25","hashOfConfig":"18"},{"size":1197,"mtime":1692785735928,"results":"26","hashOfConfig":"18"},{"size":1551,"mtime":1692192214589,"results":"27","hashOfConfig":"18"},{"size":2568,"mtime":1692785735928,"results":"28","hashOfConfig":"18"},{"size":14602,"mtime":1692785735928,"results":"29","hashOfConfig":"18"},{"size":2537,"mtime":1692182896272,"results":"30","hashOfConfig":"18"},{"size":3651,"mtime":1691591277654,"results":"31","hashOfConfig":"18"},{"size":1645,"mtime":1691648372125,"results":"32","hashOfConfig":"18"},{"size":145,"mtime":1691666529448,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1hdgfwb",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/index.js",[],["75","76"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/App.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/Context/AuthContext.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/HomePage/index.jsx",["77","78"],"import React, { useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport SystemSpecs from '../../components/SystemSpecs'\nimport { AuthContext } from '../../Context/AuthContext'\nimport { removeGpuData,updateGpuStatus } from '../../database/GpuData'\nimport { removeSshCredientials } from '../../database/sshData'\nimport TopBar from '../../components/TopBar'\nimport { SecondaryButton } from 'qlu-20-ui-library'\nimport './style.scss'\nconst ngrok = window.require('ngrok')\n\nconst HomePage = () => {\n  const navigate = useNavigate()\n  const { logout } = useContext(AuthContext)\n\n  // const handleWithdraw = async () => {\n  //   try {\n  //     await removeSshCredientials()\n  //     await removeGpuData()\n  //     await stopAndDeleteContainer(IMAGE_NAME)\n  //     await ngrok.disconnect()\n  //     setIsLend(false)\n  //   } catch (err) {\n  //     setErrorMessage(\n  //       'Withdrawal failed. Please try again. Error: ' + err.message\n  //     )\n  //     setTimeout(() => setErrorMessage(err), 5000) // Clear error message after 5 seconds\n  //     console.log(err)\n  //   }\n  // }\n\n  const handleLogout = async () => {\n    \n    // removeSshCredientials()\n    // removeGpuData()\n        const user_id = JSON.parse(localStorage.getItem('userData')).id\n        console.log(\"User_idddddddd\",user_id);\n        await updateGpuStatus(user_id, 'disconnected'); // Update gpu_status to 'active'\n      \n        logout()\n    ngrok.disconnect()\n    navigate('/')\n  }\n\n  return (\n    <>\n      <TopBar />\n      <div className=\"main-content\">\n      <div className=\"gpu-bar\">\n        <div className=\"active-gpus\">\n          <div className=\"text\">\n          Active Gpu's\n          </div>\n          \n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"87\"\n            height=\"2\"\n            viewBox=\"0 0 87 2\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M1 1H86\"\n              stroke=\"#FF8D4E\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n            />\n          </svg>\n        </div>\n        <div className=\"total-gpus\">\n          <div className=\"text\">Total Gpus</div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"87\"\n            height=\"2\"\n            viewBox=\"0 0 87 2\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M1 1H86\"\n              stroke=\"#FF8D4E\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n            />\n          </svg>\n        </div>\n        \n      </div>\n      <SystemSpecs />\n      </div>\n    <div className=\"logout-button\">\n    <SecondaryButton text='Logout' onClick={handleLogout}/>\n    </div>\n \n    </>\n  )\n}\n\nexport default HomePage\n","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/LoginPage/index.jsx",["79","80"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/SignupPage/index.jsx",["81"],"import React, { useState } from 'react'\nimport { pool } from '../../database/PoolConnection'\nimport { Modal, Button } from 'react-bootstrap'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport './style.css' // Import custom CSS file for Signup component styling\nimport * as Yup from 'yup'\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(8, 'email must be at least 8 characters long')\n    .required('email is required'),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters long')\n    .matches(/[a-z]/, 'Password must contain at least one lowercase char')\n    .matches(/[A-Z]/, 'Password must contain at least one uppercase char')\n    .matches(/[0-9]+/, 'Password must contains at least one number.')\n    .matches(\n      /[!@#$%^&*(),.?\":{}|<>]/,\n      'Password must contain at least one specialdispatch(increment()) char'\n    )\n    .required('Password is required')\n})\n\nconst SignupPage = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [showModal, setShowModal] = useState(false) // State to control the modal visibility\n  const [errors, setErrors] = useState({ email: '', password: '' })\n\n  const handleInputChange = e => {\n    const { name, value } = e.target\n    setErrors(prevErrors => ({ ...prevErrors, [name]: '' }))\n    if (name === 'email') {\n      setEmail(value)\n    } else if (name === 'password') {\n      setPassword(value)\n    }\n  }\n\n  const handleSignup = async () => {\n    try {\n      const isValid = await validationSchema.isValid({ email, password })\n      if (!isValid) {\n        try {\n          await validationSchema.validate(\n            { email, password },\n            { abortEarly: false }\n          )\n        } catch (validationErrors) {\n          const validationErrorsMap = validationErrors.inner.reduce(\n            (acc, error) => {\n              acc[error.path] = error.message\n              return acc\n            },\n            {}\n          )\n          setErrors(prevErrors => ({ ...prevErrors, ...validationErrorsMap }))\n\n          Object.values(validationErrorsMap).forEach(errorMsg => {\n            toast.error(errorMsg)\n          })\n        }\n        return\n      } else {\n        const client = await pool.connect()\n        const bcrypt = window.require('bcrypt')\n        const saltRounds = 10\n        const hashedPassword = await bcrypt.hash(password, saltRounds)\n        const query =\n          'INSERT INTO client_user (email, password) VALUES ($1, $2)'\n        await client.query(query, [email, hashedPassword])\n        console.log('User registered')\n        client.release()\n        setShowModal(true) // Show the success modal\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const handleCloseModal = () => {\n    setShowModal(false) // Close the modal\n  }\n\n  return (\n    <div className=\"signup-container\">\n      <ToastContainer /> \n      <form className=\"signup-form\">\n        <h2 className=\"signup-heading\">Signup</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\" className=\"signup-label\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            className=\"signup-input\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\" className=\"signup-label\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            className=\"signup-input\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Enter your password\"\n            value={password}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button type=\"button\" className=\"signup-button\" onClick={handleSignup}>\n          Signup\n        </button>\n        <a href=\"/\" className=\"login-link\">\n          Already have an account? Login\n        </a>\n\n        {/* Success Modal */}\n        <Modal show={showModal} onHide={handleCloseModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Success</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            User registration successful. You can now log in with your\n            credentials.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleCloseModal}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </form>\n    </div>\n  )\n}\n\nexport default SignupPage\n","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/PoolConnection/index.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/GpuData/index.js",["82","83"],"import { pool } from '../PoolConnection'\nimport { addSshCredientials } from '../../database/sshData'\n\nexport const addGpuData = async (\n  systemSpecs,\n  user_id,\n  image_id,\n  gpu_status\n) => {\n  const gpuDataList = systemSpecs['gpu'];\n  const ramData = systemSpecs['ram'];\n  const cpuData = systemSpecs['cpu'];\n  const org_id = JSON.parse(localStorage.getItem(\"userData\")).org_id;\n  console.log(\"org iddddd\", org_id);\nconsole.log(\"gpustatuss\",gpu_status);\n  if (user_id === null && image_id === null) {\n    throw 'Error adding data to the database ERROR: User or Docker Image Not Found';\n  }\n\n  try {\n    await Promise.all(\n      gpuDataList.map(async (gpuData) => {\n        const existingRecord = await checkExistingRecord(user_id, gpuData.index);\n\n        if (!existingRecord) {\n          const query =\n            'INSERT INTO system_specs (gpu_name, gpu_free, gpu_used, gpu_total, ram_free, ram_used, cpu_name, user_id, image_id, gpu_status, gpu_index,org_id) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) RETURNING id';\n\n          const values = [\n            gpuData ? gpuData.name : null,\n            gpuData ? gpuData.free : null,\n            gpuData ? gpuData.used : null,\n            gpuData ? gpuData.total : null,\n            ramData ? ramData.free : null,\n            ramData ? ramData.used : null,\n            cpuData ? cpuData : null,\n            user_id ? user_id : null,\n            image_id ? image_id : null,\n            gpu_status ? gpu_status : null,\n            gpuData ? gpuData.index : null,\n            org_id ? org_id : null\n          ];\n\n          try {\n            const result = await pool.query(query, values);\n            const insertedId = result.rows[0].id;\n            localStorage.setItem('current_job_id', insertedId);\n            console.log('Inserted data with ID:', insertedId);\n          } catch (err) {\n            console.error('Error inserting data', err);\n            throw err;\n          }\n        } else {\n          console.log('Data for GPU index', gpuData.index, 'already exists. Skipping insertion.');\n        }\n      })\n    );\n\n    await addSshCredientials();\n  } catch (err) {\n    console.error('Error inserting data', err);\n    throw err;\n  }\n};\nexport const checkExistingRecord = async (user_id, gpu_index) => {\n  const query = 'SELECT COUNT(*) FROM system_specs WHERE user_id = $1 AND gpu_index = $2';\n  const values = [user_id, gpu_index];\n\n  try {\n    const result = await pool.query(query, values);\n    const existingRecordsCount = result.rows[0].count;\n    return existingRecordsCount > 0;\n  } catch (err) {\n    console.error('Error checking existing record', err);\n    throw err;\n  }\n};\n\nexport const removeGpuData = async () => {\n  // Insert the data into the PostgreSQL database\n  const query = `DELETE FROM system_specs s WHERE s.id = ${localStorage.getItem(\n    'current_job_id'\n  )}`\n\n  try {\n    const result = await pool.query(query)\n    localStorage.removeItem('current_job_id')\n  } catch (err) {\n    throw ('Error Deleting data', err)\n  }\n}\nexport const removeGpuUserData = async user_id => {\n  const deleteQuery = `DELETE FROM system_specs WHERE user_id = $1`\n  const deleteValues = [user_id ? user_id : null]\n\n  try {\n    await pool.query(deleteQuery, deleteValues)\n    console.log('Removed GPU data for user:', user_id)\n  } catch (err) {\n    console.error('Error removing GPU data', err)\n    throw ('Error removing GPU data', err)\n  }\n}\n\nexport const getImageId = async user_id => {\n  // Insert the data into the PostgreSQL database\n\n  const query = `SELECT image_id FROM system_specs s WHERE s.user_id = ${user_id}`\n  try {\n    const result = await pool.query(query)\n    return result?.rows[0]?.image_id\n  } catch (err) {\n    throw ('Error getting data', err)\n  }\n}\n\nexport const updateGpuStatus = async (user_id, gpu_status) => {\n  const updateQuery = `UPDATE system_specs SET gpu_status = $1 WHERE user_id = $2`\n  const updateValues = [\n    gpu_status ? gpu_status : null,\n    user_id ? user_id : null\n  ]\n\n  try {\n    await pool.query(updateQuery, updateValues)\n    console.log('Updated gpu_status for user:', user_id)\n  } catch (err) {\n    console.error('Error updating gpu_status', err)\n    throw ('Error updating gpu_status', err)\n  }\n}","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/database/sshData/index.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/SystemSpecs/index.jsx",["84"],"import React, { useEffect, useState } from 'react';\nimport GpuNode from '../GpuNode';\nimport { execShellCommand, getSystemSpecs } from '../../utils/scripts';\nimport { getImageId } from '../../database/GpuData'\nimport './style.scss'\nconst SystemSpecs = () => {\nconst [systemSpecs, setSystemSpecs] = useState(null);\nconst [isRunning, setIsRunning] = useState(false);\n\nuseEffect(() => {\n    const fetchSystemSpecs = async () => {\n    try {\n        console.log('Fetching system specs');\n        const userData = JSON.parse(localStorage.getItem('userData'));\n        const imageId = await getImageId(userData.id);\n        console.log('Image Id: ' + imageId);\n        if(imageId){\n            const status = await execShellCommand(`docker ps --filter \"ancestor=${imageId}\" --format \"{{.Status}}\"`)\n            console.log('Image Status: ' + status);\n            if(status.split(\" \")[0] === \"Up\"){\n                setIsRunning(true)\n            }else{\n                setIsRunning(false)\n            }\n        }\n\n        const specs = await getSystemSpecs();\n        setSystemSpecs(specs);\n        console.log('Specs: ' , systemSpecs);\n    } catch (error) {\n        console.error('Error retrieving system specs:', error);\n    }\n    };\n\n    fetchSystemSpecs();\n}, []);\n\nif (!systemSpecs) {\n    return <div className='text-light'>loading...</div>\n}\n\nreturn (\n    <div> \n        <hr/>\n         <div className='card-container'> \n            <GpuNode systemSpecs={systemSpecs} isRunning={isRunning}/>\n        </div> \n    </div>\n);\n};\n\nexport default SystemSpecs;\n","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/utils/scripts.js",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/GpuNode/index.jsx",["85","86","87"],"import { useState, useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Alert } from 'react-bootstrap'\nimport { addGpuData, removeGpuData,updateGpuStatus,checkExistingRecord } from '../../database/GpuData'\nimport { removeSshCredientials } from '../../database/sshData'\nimport {\n  createAndStartDocker,\n  stopAndDeleteContainer\n} from '../../services/dockerCreation'\nimport { execShellCommand } from '../../utils/scripts'\nimport { SecondaryButton } from 'qlu-20-ui-library'\nimport './style.scss'\n\nconst ngrok = window.require('ngrok')\n\nconst ID = uuidv4()\n\nconst IMAGE_NAME = `client_dk_${ID}`\nconst CONTAINER_IMAGE_NAME = `client_dk_container_${ID}`\n\nconst GpuNode = ({ systemSpecs, isRunning }) => {\n  const [errorMessage, setErrorMessage] = useState('')\n  const [isLend, setIsLend] = useState(isRunning)\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false)\n  console.log(\"Running????\",isRunning);\n\n  const handleLend = async () => {\n    try {\n      const gpu_status='active'\n      const gpu_index=systemSpecs['gpu'][0].index;\n      const user_id = JSON.parse(localStorage.getItem('userData')).id\n     console.log(\"SystemSpecs\",systemSpecs['gpu'][0].index)\n\n     const existingRecord = await checkExistingRecord(user_id, gpu_index);\n     if(!existingRecord){\n      if (systemSpecs) {\n        await createAndStartDocker(IMAGE_NAME, CONTAINER_IMAGE_NAME)\n        const image_id = await execShellCommand(\n          `docker images -q ${IMAGE_NAME}`\n        )\n        \n        console.log(user_id, image_id)\n        await addGpuData(systemSpecs, user_id, image_id,gpu_status);\n        setShowSuccessMessage(true)\n        setIsLend(true)\n        setTimeout(() => setShowSuccessMessage(false), 5000)\n      }\n     }\n     else{\n      await updateGpuStatus(user_id, gpu_status);\n      setShowSuccessMessage(true);\n      setIsLend(true);\n     }\n      \n    } catch (err) {\n      setErrorMessage('Lending failed. Please try again. Error: ' + err.message)\n      setTimeout(() => setErrorMessage(err), 5000) // Clear error message after 5 seconds\n      console.log(err)\n    }\n  }\n\n  const handleWithdraw = async () => {\n    try {\n      //  await removeSshCredientials()\n      //  await removeGpuData()\n      await stopAndDeleteContainer(IMAGE_NAME)\n      await ngrok.disconnect()\n      const user_id = JSON.parse(localStorage.getItem('userData')).id\n      await updateGpuStatus(user_id, 'inactive');\n      setIsLend(false)\n    } catch (err) {\n      setErrorMessage(\n        'Withdrawal failed. Please try again. Error: ' + err.message\n      )\n      setTimeout(() => setErrorMessage(err), 5000) // Clear error message after 5 seconds\n      console.log(err)\n    }\n  }\n\n  return (\n    <>\n      {showSuccessMessage && (\n        <Alert\n          variant=\"primary\"\n          className=\"position-fixed top-0 end-0 mt-4 me-4\"\n          onClose={() => setShowSuccessMessage(false)}\n          dismissible\n        >\n          {!isLend ? 'Withdrawn success!' : 'Lending success!'}\n        </Alert>\n      )}\n      {errorMessage && (\n        <Alert\n          variant=\"danger\"\n          className=\"position-fixed top-0 end-0 mt-4 me-4\"\n          onClose={() => setErrorMessage(false)}\n          dismissible\n        >\n          {errorMessage}\n        </Alert>\n      )}\n\n      {/* Display GPU and system info in the card-container */}\n      {systemSpecs['gpu'] !== undefined ? (\n        systemSpecs['gpu']?.length >= 0 &&\n        systemSpecs['gpu']?.map((gpu, i) => (\n          <div key={i} className=\"gpu-card\">\n            <div className=\"title\">\n              <div className=\"left-info\">\n                <div className=\"gpu-num\">{`GPU-${i + 1}`}</div>\n                <div className=\"gpu-name\">{gpu.name}</div>\n              </div>\n\n              <div className=\"icon\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"22\"\n                  height=\"22\"\n                  viewBox=\"0 0 22 22\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M10.9974 15.585C10.7681 15.585 10.5805 15.7725 10.583 16.0018C10.583 16.2311 10.7706 16.4186 10.9999 16.4186C11.2291 16.4186 11.4167 16.2311 11.4167 16.0018C11.4167 15.7725 11.2291 15.585 10.9974 15.585\"\n                    stroke=\"#D5D5D5\"\n                    stroke-width=\"2.4\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M10.9974 10.583C10.7681 10.583 10.5805 10.7706 10.583 10.9998C10.583 11.2291 10.7706 11.4167 10.9999 11.4167C11.2291 11.4167 11.4167 11.2291 11.4167 10.9998C11.4167 10.7706 11.2291 10.583 10.9974 10.583\"\n                    stroke=\"#D5D5D5\"\n                    stroke-width=\"2.4\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M10.9974 5.58105C10.7681 5.58105 10.5805 5.76863 10.583 5.99789C10.583 6.22716 10.7706 6.41473 10.9999 6.41473C11.2291 6.41473 11.4167 6.22716 11.4167 5.99789C11.4167 5.76863 11.2291 5.58105 10.9974 5.58105\"\n                    stroke=\"#D5D5D5\"\n                    stroke-width=\"2.4\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                </svg>\n              </div>\n            </div>\n            <div className=\"logo\">\n              {isLend ? (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"87\"\n                  height=\"87\"\n                  viewBox=\"0 0 87 87\"\n                  fill=\"none\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M12.6875 14.5H70.6875C76.6936 14.5 81.5625 19.3689 81.5625 25.375V61.625C81.5625 67.6311 76.6936 72.5 70.6875 72.5H12.6875V14.5Z\"\n                    stroke=\"#99552F\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M12.6875 76.125V14.5C12.6875 12.498 11.0645 10.875 9.0625 10.875H5.4375\"\n                    stroke=\"#99552F\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M23.5625 29V58\"\n                    stroke=\"#99552F\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M59.8164 43.5V60.0703\"\n                    stroke=\"url(#paint0_linear_418_1525)\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M45.3164 43.4989V26.9258\"\n                    stroke=\"url(#paint1_linear_418_1525)\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <circle\n                    cx=\"52.5664\"\n                    cy=\"43.5\"\n                    r=\"7.25\"\n                    stroke=\"#FF8D4E\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M52.5664 36.25H69.1366\"\n                    stroke=\"url(#paint2_linear_418_1525)\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M52.5683 50.75H35.9951\"\n                    stroke=\"url(#paint3_linear_418_1525)\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M52.564 61.625H52.561C42.5511 61.6242 34.4371 53.5091 34.4375 43.4992C34.4379 33.4894 42.5526 25.375 52.5625 25.375C62.5724 25.375 70.6871 33.4894 70.6875 43.4992C70.6879 53.5091 62.5739 61.6242 52.564 61.625\"\n                    stroke=\"#FFBF9B\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <defs>\n                    <linearGradient\n                      id=\"paint0_linear_418_1525\"\n                      x1=\"62.5\"\n                      y1=\"52\"\n                      x2=\"57.5\"\n                      y2=\"52\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#FF8D4E\" />\n                      <stop offset=\"1\" stop-color=\"#FF8D4E\" stop-opacity=\"0\" />\n                    </linearGradient>\n                    <linearGradient\n                      id=\"paint1_linear_418_1525\"\n                      x1=\"48\"\n                      y1=\"35.4273\"\n                      x2=\"43\"\n                      y2=\"35.4272\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#FF8D4E\" />\n                      <stop offset=\"1\" stop-color=\"#FF8D4E\" stop-opacity=\"0\" />\n                    </linearGradient>\n                    <linearGradient\n                      id=\"paint2_linear_418_1525\"\n                      x1=\"60.8515\"\n                      y1=\"34.4375\"\n                      x2=\"60.8515\"\n                      y2=\"38.0625\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#FF8D4E\" />\n                      <stop offset=\"1\" stop-color=\"#FF8D4E\" stop-opacity=\"0\" />\n                    </linearGradient>\n                    <linearGradient\n                      id=\"paint3_linear_418_1525\"\n                      x1=\"44.2817\"\n                      y1=\"48.9375\"\n                      x2=\"44.2817\"\n                      y2=\"52.5625\"\n                      gradientUnits=\"userSpaceOnUse\"\n                    >\n                      <stop stop-color=\"#FF8D4E\" />\n                      <stop offset=\"1\" stop-color=\"#FF8D4E\" stop-opacity=\"0\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n              ) : (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"87\"\n                  height=\"87\"\n                  viewBox=\"0 0 87 87\"\n                  fill=\"none\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M12.6875 14.5H70.6875C76.6936 14.5 81.5625 19.3689 81.5625 25.375V61.625C81.5625 67.6311 76.6936 72.5 70.6875 72.5H12.6875V14.5Z\"\n                    stroke=\"#727272\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M12.6875 76.125V14.5C12.6875 12.498 11.0645 10.875 9.0625 10.875H5.4375\"\n                    stroke=\"#727272\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M23.5625 29V58\"\n                    stroke=\"#727272\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M45.3164 43.4989V26.9258\"\n                    stroke=\"#ADADAD\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M59.8164 43.5V60.0703\"\n                    stroke=\"#ADADAD\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M52.5664 36.25H69.1366\"\n                    stroke=\"#ADADAD\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M52.5683 50.75H35.9951\"\n                    stroke=\"#ADADAD\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <circle\n                    cx=\"52.5664\"\n                    cy=\"43.5\"\n                    r=\"7.25\"\n                    stroke=\"#ADADAD\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                  <path\n                    d=\"M52.564 61.625H52.561C42.5511 61.6242 34.4371 53.5091 34.4375 43.4992C34.4379 33.4894 42.5526 25.375 52.5625 25.375C62.5724 25.375 70.6871 33.4894 70.6875 43.4992C70.6879 53.5091 62.5739 61.6242 52.564 61.625\"\n                    stroke=\"#727272\"\n                    stroke-width=\"5.4375\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                </svg>\n              )}\n            </div>\n            <div className=\"system-info\">\n              <div className=\"info\">\n                <span className=\"name\">VRAM</span>\n                <span className=\"value\">{`${((gpu.used + gpu.total) / 1024).toFixed(2)} GB`}</span>\n              </div>\n              <div className=\"info\">\n                <span className=\"name\">RAM</span>\n                <span className=\"value\">{`${((systemSpecs['ram'].used + systemSpecs['ram'].total) / 1024).toFixed(2)} GB`}</span>\n              </div>\n              <div className=\"info\">\n                <span className=\"name\">CPU USAGE</span>\n                <span className=\"value\">{systemSpecs['cpu']}</span>\n              </div>\n            </div>\n            <div className=\"button\">\n              {!isLend ? (\n                <SecondaryButton text=\"Lend GPU\" onClick={handleLend} />\n              ) : (\n                <SecondaryButton text=\"Stop Lending\" onClick={handleWithdraw} />\n              )}\n            </div>\n          </div>\n        ))\n      ) : (\n        <h3>No GPU</h3>\n      )}\n    </>\n  )\n}\n\nexport default GpuNode\n","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/services/dockerCreation.js",["88","89","90","91"],"const Docker = window.require('dockerode')\nconst { exec } = window.require('child_process')\n\nconst docker = new Docker()\n\nconst execShellCommand = cmd => {\n  return new Promise((resolve, reject) => {\n    exec(cmd, (error, stdout, stderr) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve(stdout || stderr)\n      }\n    })\n  })\n}\n\nexport async function createAndStartDocker(imageName, container_image_name) {\n  const PORT = 2222\n\n  console.log('Creating Docker image...')\n  try {\n    await execShellCommand(\n      `docker build --rm -t ${imageName} -f /home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/server/Dockerfile .`\n    )\n  } catch (error) {\n    console.error('Error Creating Docker image:', error)\n    throw 'Error Creating Docker image'\n  }\n\n  console.log('Running Docker container...')\n  try {\n    execShellCommand(\n      `docker run -d -p 2222:22 --name ${imageName} ${imageName}`\n      // `docker run -p ${PORT}:22 --name ${container_image_name} ${imageName}:latest`\n    )\n  } catch (error) {\n    console.error('Error running Docker container:', error)\n    throw 'Error running Docker container'\n  }\n}\n\n\nexport async function stopAndDeleteContainer(imageName) {\n  // Stop the container\n  const stopCommand = `docker stop ${imageName}`;\n  exec(stopCommand, (stopError, stopStdout, stopStderr) => {\n    if (stopError) {\n      console.error(`Error stopping the container: ${imageName}`);\n      console.error(stopStderr);\n    } else {\n      console.log(`Container ${imageName} stopped successfully.`);\n\n      // Delete the container\n      const deleteContainerCommand = `docker rm ${imageName}`;\n      exec(deleteContainerCommand, (deleteContainerError, deleteContainerStdout, deleteContainerStderr) => {\n        if (deleteContainerError) {\n          console.error(`Error deleting the container: ${imageName}`);\n          console.error(deleteContainerStderr);\n        } else {\n          console.log(`Container ${imageName} deleted successfully.`);\n\n          // Now that the container is deleted, you can delete the image\n          const deleteImageCommand = `docker rmi ${imageName}`;\n          exec(deleteImageCommand, (deleteImageError, deleteImageStdout, deleteImageStderr) => {\n            if (deleteImageError) {\n              console.error(`Error deleting the image: ${imageName}`);\n              console.error(deleteImageStderr);\n            } else {\n              console.log(`Image ${imageName} deleted successfully.`);\n            }\n          });\n        }\n      });\n    }\n  });\n}\n\n\n\n\n\n\n","/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/views/LoginPage2/index.jsx",["92","93","94","95"],"import { useState } from 'react'\nimport './style.scss'\nimport {\n  AuthNavBar,\n  ClickableText,\n  InputField,\n  PrimaryButton\n} from 'qlu-20-ui-library'\n\n//import HomePage from \"../HomePage/index.jsx\";\nimport { useNavigate, Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n//import { setUserData } from \"../../reducers/userSlice\";\n//import { isEmailValid } from \"../../../utils\";\n\nfunction Login() {\n  //const SERVER_URL = import.meta.env.VITE_APP_SERVER_URL;\n  const [email, setEmail] = useState('')\n  const dispatch = useDispatch()\n  const [password, setPassword] = useState('')\n  const [emailError, setEmailError] = useState('')\n  const [passwordError, setPasswordError] = useState('')\n  const navigate = useNavigate()\n\n  const loginHandler = async () => {\n    setEmailError('')\n    setPasswordError('')\n\n    if (!email && !password) {\n      setEmailError('Email is required')\n\n      setPasswordError('Password is required')\n      return\n    }\n    if (!email) {\n      setEmailError('Email is required')\n      return\n    }\n\n    // if (!isEmailValid(email)) {\n    //   setEmailError(\"Invalid email format\");\n    //   return;\n    // }\n\n    if (!password) {\n      setPasswordError('Password is required')\n      return\n    }\n\n    const data = {\n      email,\n      password\n    }\n    // dispatch(logIn(data));\n\n    try {\n      const response = await fetch('auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      }).then(response => response.json())\n      console.log(response)\n      if (response.success === true) {\n        console.log('Resonse-user', response.user)\n        // dispatch(setUserData(response.user));\n        localStorage.setItem('xhqr', JSON.stringify(response.user?.xhqr))\n        navigate('/')\n\n        //  setVerificationStatus(true);\n      } else {\n        navigate('/UnverifiedPage')\n      }\n    } catch (error) {\n      console.error('Error verifying link:', error)\n    }\n  }\n\n  return (\n    <div className=\"login_page\">\n      <div className=\"auth_nav_bar\">\n        <AuthNavBar\n          text=\"Don't have an account\"\n          textColor=\"gray\"\n          buttonText=\"Sign up\"\n          buttonColorVaraint=\"primaryOrangeBorderAndText\"\n          buttonOnClick={() => {\n            navigate('/signup')\n          }}\n          textOnClick={() => {}}\n        />\n      </div>\n\n      <div className=\"login_container\">\n        <h3>Welcome Back!</h3>\n        <div className=\"login_details\">\n          <div className=\"email\">\n            <label className=\"email\">Work Email</label>\n            <InputField\n              id=\"email\"\n              value={email}\n              onChangeHandler={e => setEmail(e.target.value)}\n              required\n            />\n            {emailError && <p className=\"error-message\">{emailError}</p>}\n          </div>\n          <div className=\"pass\">\n            <label htmlFor=\"\" className=\"password\">\n              PASSWORD\n            </label>\n            <InputField\n              type=\"password\"\n              value={password}\n              onChangeHandler={e => setPassword(e.target.value)}\n              required\n            />\n            {passwordError && <p className=\"error-message\">{passwordError}</p>}\n          </div>\n          <Link to=\"/forgot-password\">Forgot Password</Link>\n        </div>\n        <div className=\"button\">\n          <button\n            type=\"submit\"\n            className=\"primaryButton\"\n            onClick={loginHandler}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n",["96","97"],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/TopBar/index.jsx",[],"/home/shireen/Desktop/qcloud1.0/qCloud-electron-app/src/components/Card/index.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":23},{"ruleId":"102","severity":1,"message":"106","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":31},{"ruleId":"102","severity":1,"message":"107","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":24},{"ruleId":"102","severity":1,"message":"108","line":35,"column":9,"nodeType":"104","messageId":"105","endLine":35,"endColumn":26},{"ruleId":"102","severity":1,"message":"109","line":29,"column":10,"nodeType":"104","messageId":"105","endLine":29,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":17,"column":5,"nodeType":"112","messageId":"113","endLine":17,"endColumn":85},{"ruleId":"102","severity":1,"message":"114","line":86,"column":11,"nodeType":"104","messageId":"105","endLine":86,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":36,"column":4,"nodeType":"117","endLine":36,"endColumn":6,"suggestions":"118"},{"ruleId":"102","severity":1,"message":"119","line":1,"column":20,"nodeType":"104","messageId":"105","endLine":1,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":4,"column":22,"nodeType":"104","messageId":"105","endLine":4,"endColumn":35},{"ruleId":"102","severity":1,"message":"106","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":31},{"ruleId":"102","severity":1,"message":"120","line":4,"column":7,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"121","line":19,"column":9,"nodeType":"104","messageId":"105","endLine":19,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":28,"column":5,"nodeType":"112","messageId":"113","endLine":28,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":39,"column":5,"nodeType":"112","messageId":"113","endLine":39,"endColumn":43},{"ruleId":"102","severity":1,"message":"122","line":5,"column":3,"nodeType":"104","messageId":"105","endLine":5,"endColumn":16},{"ruleId":"102","severity":1,"message":"123","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":16},{"ruleId":"102","severity":1,"message":"124","line":19,"column":9,"nodeType":"104","messageId":"105","endLine":19,"endColumn":17},{"ruleId":"102","severity":1,"message":"125","line":50,"column":11,"nodeType":"104","messageId":"105","endLine":50,"endColumn":15},{"ruleId":"98","replacedBy":"126"},{"ruleId":"100","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'removeGpuData' is defined but never used.","Identifier","unusedVar","'removeSshCredientials' is defined but never used.","'ToastContainer' is defined but never used.","'handleInputChange' is assigned a value but never used.","'errors' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'systemSpecs'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'useEffect' is defined but never used.","'docker' is assigned a value but never used.","'PORT' is assigned a value but never used.","'ClickableText' is defined but never used.","'PrimaryButton' is defined but never used.","'dispatch' is assigned a value but never used.","'data' is assigned a value but never used.",["128"],["129"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [systemSpecs]",{"range":"133","text":"134"},[1256,1258],"[systemSpecs]"]